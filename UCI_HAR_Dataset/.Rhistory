readBin(my.file2,double(),size = 8,n = 1)
close(my.file2)
close.connection(my.file2)
my.file2 <- file("/Users/geli/Desktop/doubledata.bin",'rb')
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
readBin(my.file2,double(),size = 8,n = 1)
close(my.file22)
close(my.file2)
close(my.file)
swirl()
library(sworl)
library(swirl)
swirl()
library(tidyr)
library(swirl)
swirl()
tan(pi)
tan(pi/2)
tan(pi/4)
tan(15*pi/180)
10*sqrt(3)
-10*sqrt(3)
-10/sqrt(3)
-10/sqrt(3)-20/tan(pi*15/180)
-15/sqrt(3)-15/tan(pi*15/180)
-15/sqrt(3)
tan(15)
tan(45)
atan(10/15)
atan(10/15)/pi*180
30/sqrt(3)
－15/sqrt(3)
-15/sqrt(3)
-15/sqrt(3)-15/tan(15*pi/180)
atan(1/3)
atan(1/3)*180/pi
atan(3)*180/pi
L2
setwd('/Users/geli/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/UCI_HAR_Dataset')
dir()
fileConnect <- file('./test/X_test.txt')
L <- readLines(fileConnect,n = 1)
L2<-strsplit(L,split = " ")
str(L2)
L2<-strsplit(L,split = " ")
words<-L2[[1]]
class(words)
class(L2)
paste(words,",")
words
words[1]
words[2]
words[3]
class(words)
length(words)
which(words=="")
length(which(words==""))
106+561
paste(words[which(words~="")],",")
which(words！="")
which(words!="")
paste(words[which(words!="")],",")
class(paste(words[which(words!="")],","))
L3<-class(paste(words[which(words!="")],","))
L3
DF <- read.csv(L3)
DF <- read.csv(text=L3)
DF
L3
DF <- read.csv(text=L3,as.is = T)
DF
DF
L3
L3
Le
words[which(words!="")]
paste(words[which(words!="")],",")
paste(words[which(words!="")])
words[1]
words[2]
words[3]
L3<-(words[which(words!="")])
L3[1]
L3[2]
L3[3]
clas(l3)
class(l3)
class(L3)
DF <- read.csv(text = L3)
DF
str(DF)
DF <- read.csv(text = L3,as.is = T)
str(DF)
DF <- read.csv(text = L3,sep = " ")
str(DF)
DF[1,:] <- read.csv(text = L3,sep = " ")
fileConnect <- file('./test/X_test.txt')
L<- readLines(fileConnect)
Ltmp <- L[1:2]
Ltmp <- L[[1:2]]
L
str(L)
L[[1]]
L[[2]]
Ltmp <- L[[1:2]]
Ltmp <- L[1:2]
strsplit(Ltmp,split = " ")
str(strsplit(Ltmp,split = " "))
L3tmp<-str(strsplit(Ltmp,split = " "))
L3tmp[1]
L3tmp[[1]]
L3tmp
L3tmp<-(strsplit(Ltmp,split = " "))
L3tmp[[1]]
L3tmp[[2]]
str(L3tmp)
L3tmp[[1]]
str(L)
pangram <- "The quick brown fox jumps over the lazy dog"
str(pangram)
class(pangram)
class(L3tmp)
L2<-strsplit(L,split = " ")
class(L)
class(L2)
length(L2)
L2tmp
View(L2)
class(l2)
class(L2)
Ls <- L[1:2]
L2s<-strsplit(Ls,split = " ")
class(L2s)
?write.csv
which(L2s=='')
which(L2s[[1]]=='')
class(L2s[[1]])
func <- function(Lchar){
Lchar[which(Lchar) !=""]
}
class(func)
lapply(L2s,func)
func <- function(Lchar){
Lchar[which(Lchar !="")]
}
lapply(L2s,func)
L3s<-lapply(L2s,func)
str(L3s)
paste(L3s[1]," ")
L3s[1:2]
L3s[1][1:2]
L3s[1]
length(L3s[1])
length(L3s[[1]])
class(L3s)
L3s<-sapply(L2s,func)
class(L3s)
str(L3s)
L3s[561,1]
L3s<-matrix(sapply(L2s,func),nrow = 2)
str(L3s)
L3s(2,561)
L3s[2,561]
L3s[1,561]
“x <- matrix(1:6, 2, 3)”
Excerpt From: Roger D. Peng. “R Programming for Data Science.” iBooks.
x <- matrix(1:6, 2, 3)
matrix(x,nrow = 3)
y<-matrix(x,nrow = 3)
matrix(y,nrow=2)
L2s
L2s[[2]]
L3s[2,561]
L3s[1,561]
L2s[[1]]
L2s[[1]]
L3s[1,561]
L3s<-(sapply(L2s,func))
L3s[561,1]
L2s[[1]]
L3s[561,1]
L3s[560,1]
L3s[561,2]
L3s<-t(sapply(L2s,func))
L3s[2,561]
L3s[1,561]
DF<-data.frame(L3s)
str(DF)
nrow(DF)
ncol(DF)
DF<-data.frame(L3s,stringsAsFactors = F)
str(DF)
head(DF[1,1:3])
DF<-data.frame(as.numeric(L3s))
head(DF[1,1:3])
DF[1,1]
ncol(DF)
as.numeric(L3s)
str(as.numeric(L3s))
nrow(L3s)
ncol(L3s)
DF<-data.frame(matrix(as.numeric(L3s),nrow = 2)
)
head(DF[1,1:10])
DF2<-data.frame(L3s,stringsAsFactors = F)
head(DF2[1,1:10])
DF[1,561]
DF2[1,561]
View(DF2)
View(DF2)
View(DF)
View(DF)
DF<-data.frame(matrix(as.numeric(L3s),ncol=561)
)
View(DF)
View(DF)
View(DF2)
View(DF2)
testSubject <- read.csv('./test/subject_test.txt',sep = " ")
View(testSubject)
View(testSubject)
testActivityID <-  read.csv('./test/y_test.txt',sep = " ")
trainActivityID <-  read.csv('./train/y_train.txt',sep = " ")
View(testActivityID)
View(testActivityID)
measurementName <- read.csv('features.txt',sep=" ")
View(measurementName)
View(measurementName)
measurementName[:,2]
measurementName <- read.csv('features.txt',sep=" ",header = F)
measurementName$V2
measurementName <- read.csv('features.txt',sep=" ",header = F,stringsAsFactors = F)
class(measurementName$V2)
measurementName$V2[1]
measurementName$V2[2]
varName <- as.vector(measurementName$V2)
class(varName)
str(varName)
c("1","2")
str(c("1","2"))
names(L3s)
L3s
str(DF2)
class(DF2)
ncol(DF2)
names(DF2) <- varName
View(DF2)
View(DF2)
names(DF2) <- as.vector(measurementName$V2)
View(testSubject)
View(testSubject)
setwd('/Users/geli/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/UCI_HAR_Dataset')
func <- function(Lchar){
Lchar[which(Lchar !="")]
}
fileConnect <- file('./test/X_test.txt')
fileConnectTrain <- file('./train/X_train.txt')
measurementName <- read.csv('features.txt',sep=" ",header = F,stringsAsFactors = F)
L <- readLines(fileConnect)
L2<-strsplit(L,split = " ")
L3<-t(lapply(L2,func))
testDF<-data.frame(matrix(as.numeric(L3),ncol=561))
testSubject <- read.csv('./test/subject_test.txt',sep = " ",header = F,stringsAsFactors = F)
testActivityID <-  read.csv('./test/y_test.txt',sep = " ",header = F,stringsAsFactors = F)
L <- readLines(fileConnectTrain)
L2<-strsplit(L,split = " ")
L3<-t(lapply(L2,func))
trainDF<-data.frame(matrix(as.numeric(L3),ncol=561))
trainSubject <- read.csv('./train/subject_train.txt',sep = " ",header = F,stringsAsFactors = F)
trainActivityID <-  read.csv('./train/y_train.txt',sep = " ",header = F,stringsAsFactors = F)
testDF <- rbind(testDF,testSubject,testActivityID)
trainDF <- rbind(trainDF,trainSubject,trainActivityID)
names(testDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
names(trainDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
class(L3)
str(L3)
as.numeric(L3)
class(L3)
L3<-t(lapply(L2,func))
as.numeric(L3)
class(L3)
nrow(L3)
rm(list=())
rm(list=ls())
setwd('/Users/geli/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/UCI_HAR_Dataset')
func <- function(Lchar){
Lchar[which(Lchar !="")]
}
fileConnect <- file('./test/X_test.txt')
fileConnectTrain <- file('./train/X_train.txt')
measurementName <- read.csv('features.txt',sep=" ",header = F,stringsAsFactors = F)
dir()
L <- readLines(fileConnect)
L2<-strsplit(L,split = " ")
class(L2)
L2[[1]]
L3<-t(lapply(L2,func))
testDF<-data.frame(matrix((L3),ncol=561))
L3
L3[[1]]
L2[[1]]
L3[[1]]
matrix((L3),ncol=561)
L3<-t(sapply(L2,func))
class(L3)
L3
testDF<-data.frame(matrix(as.numeric(L3),ncol=561))
View(testDF)
testSubject <- read.csv('./test/subject_test.txt',sep = " ",header = F,stringsAsFactors = F)
testActivityID <-  read.csv('./test/y_test.txt',sep = " ",header = F,stringsAsFactors = F)
L <- readLines(fileConnectTrain)
L2<-strsplit(L,split = " ")
L3<-t(sapply(L2,func))
trainDF<-data.frame(matrix(as.numeric(L3),ncol=561))
trainSubject <- read.csv('./train/subject_train.txt',sep = " ",header = F,stringsAsFactors = F)
trainActivityID <-  read.csv('./train/y_train.txt',sep = " ",header = F,stringsAsFactors = F)
testDF <- rbind(testDF,testSubject,testActivityID)
trainDF <- rbind(trainDF,trainSubject,trainActivityID)
names(testDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
names(trainDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
class(testSubject)
names(testActivityID)
names(testSubject)
testDF <- cbind(testDF,testSubject,testActivityID)
trainDF <- cbind(trainDF,trainSubject,trainActivityID)
names(testDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
names(trainDF) <- c(as.vector(measurementName$V2),"SubjectID","ActivityID")
View(testDF)
View(testDF)
mergedDF <- rbind(testDF,trainDF)
7352+2947
View(mergedDF)
View(mergedDF)
library(dplyr
)
?select
View(measurementName)
View(measurementName)
selectedData <- select(mergedDF,contains("mean") | contains("std"))
selectedData <- select(mergedDF,contains("mean") || contains("std"))
selectedData <- select(mergedDF,contains("mean"))
View(mergedDF)
View(mergedDF)
mergedDF$`fBodyAcc-bandsEnergy()-1,16`
selectedData <- select(mergedDF,contains("mean"))
varNames <- measurementName$V2
class(varNames)
length(varNames)
grep("mean",varNames)
varNames(grep("mean",varNames))
varNames[grep("mean",varNames)]
grep("mean | std",varNames)
grep("mean" | "std",varNames)
grep("std",varNames)
grep("mean | std",varNames)
grep("^mean",varNames)
grep("Z?",varNames)
grep("mean|std",varNames)
selectedIndex <- grep("mean|std",measurementName$V2)
selectedDF <- mergedDF[:,selectedIndex]
selectedDF <- mergedDF[,selectedIndex]
View(selectedDF)
ncol(selectedDF)
ncol(mergedDF)
selectedDF <- mergedDF[,c(selectedIndex,562,563]
selectedDF <- mergedDF[,c(selectedIndex,562,563)]
activityLables <-  read.csv('activity_labels.txt',sep=" ",header = F,stringsAsFactors = F)
activityLables$V2
activityLables$V2[c(1,2,3)]
mutate(selectedDF,activityNames =activityLables$V2[ActivityID] )
View(selectedDF)
activityLables$V2[seletedDF$ActivityID]
activityLables$V2[selectedDF$ActivityID]
class(activityLables$V2[selectedDF$ActivityID])
length(activityLables$V2[selectedDF$ActivityID])
selectedDF<-mutate(selectedDF,activityNames =activityLables$V2[ActivityID] )
View(selectedDF)
library(tidyr)
View(selectDF)
View(selectedDF)
names(testDF) <- c(as.vector(measurementName$V2),"subjectID","activityID")
names(trainDF) <- c(as.vector(measurementName$V2),"subjectID","activityID")
View(selectedDF)
names(selectedDF) <- c(as.vector(measurementName$V2),"subjectID","activityID")
mergedDF <- rbind(testDF,trainDF)
selectedIndex <- grep("mean|std",measurementName$V2)
selectedDF <- mergedDF[,c(selectedIndex,562,563)]
# Use decriptive activity names
activityLables <-  read.csv('activity_labels.txt',sep=" ",header = F,stringsAsFactors = F)
selectedDF<-mutate(selectedDF,activityNames =activityLables$V2[activityID] )
testDF<-gather(selectedDF,measurements,value,-(subjectID:activityNames))
View(testDF)
summarize(testDF)
summarize(testDF)
View(testDF)
summarize(testDF)
ncol(testDF)
nrow(testDF)
?split
selectedDF<- selectedDF %>% mutate(activityNames =activityLables$V2[activityID] ) %>% select(-activityID)
testDF<-gather(selectedDF,measurements,value,-(subjectID:activityNames))
testDF2 <- dcast(testDF,subjectID~activityNames,mean)
library(reshape2)
testDF2 <- dcast(testDF,subjectID~activityNames,mean)
View(testDF2)
?unite
testDF2 <- unite(testDF,subjectID_activityNames,subjectID,activityNames,sep="_")
testDF3 <- dcast(testDF2,subjectID_activityNames ~ measurements,mean)
View(testDF3)
nrow(testDF3)
testDF4<-separate(testDF3,subjectID_activityNames,subjectID,activityNames,sep="_")
testDF4<-separate(testDF3,subjectID_activityNames,into =c("subjectID","activityNames"),sep="_")
Views(testDF4)
View(testDF4)
selectedDF<- selectedDF %>% mutate(activityNames =activityLables$V2[activityID] ) %>% select(-activityID)
selectedDF<- selectedDF %>% mutate(activityNames =activityLables$V2[activityID] ) %>% select(-activityID)
selectedDF<- selectedDF %>% mutate(activityNames =activityLables$V2[activityID] ) %>% select(-activityID)
finalDF<- selectedDF %>%
gather(measurements,value,-(subjectID:activityNames)) %>%
dcast(subjectID~activityNames,mean) %>%
unite(subjectID_activityNames,subjectID,activityNames,sep="_")  %>%
dcast(subjectID_activityNames ~ measurements,mean) %>%
separate(subjectID_activityNames,into =c("subjectID","activityNames"),sep="_")
gather(selectedDF,measurements,value,-(subjectID:activityNames))
test<-gather(selectedDF,measurements,value,-(subjectID:activityNames))
View(test)
test2<-dcast(test,subjectID~activityNames,mean)
test3<-unite(test,2subjectID_activityNames,subjectID,activityNames,sep="_")
test3<-unite(test2,subjectID_activityNames,subjectID,activityNames,sep="_")
View(test2)
View(test2)
finalDF<- selectedDF %>%
gather(measurements,value,-(subjectID:activityNames)) %>%
unite(subjectID_activityNames,subjectID,activityNames,sep="_")  %>%
dcast(subjectID_activityNames ~ measurements,mean) %>%
separate(subjectID_activityNames,into =c("subjectID","activityNames"),sep="_")
View(finalDF)
write.table(selectedDF,file = "firstDataset.txt",row.names=F)
write.table(finalDF,file = "secondDataset.txt",row.names=F)
dir()
library(tidyr)
library(reshape2)
library(dplyr)
setwd('./UCI_HAR_Dataset') # set working directory
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
dir()
getwd()
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
dir()
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
dir()
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
dir()
this.dir
c(this.dir,"/UCI_HAR_Dataset")
this.dir+"/UCI_HAR_Dataset"
paste(this.dir,"/UCI_HAR_Dataset","")
paste(strtrim(this.dir),"/UCI_HAR_Dataset","")
paste("Hello", "world", sep="")
paste(this.dir,"/UCI_HAR_Dataset","")
(this.dir
)
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
wkDir
wkDir <- paste(str_trim(this.dir,side="both"),"/UCI_HAR_Dataset","")
library(stringr)
wkDir <- paste(str_trim(this.dir,side="both"),"/UCI_HAR_Dataset","")
wkDir
/UCI_HAR_Dataset
"/UCI_HAR_Dataset"
paste("sds","/UCI_HAR_Dataset")
paste("sds","UCI_HAR_Dataset")
paste("sds","UCI_HAR_Dataset",sep="")
paste("sds","/UCI_HAR_Dataset",sep="")
paste("/Users/geli/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project","/UCI_HAR_Dataset",sep="")
this.dir
paste(this.dir ,"/UCI_HAR_Dataset",sep="")
paste(this.dir,"/UCI_HAR_Dataset",sep="")
paste(this.dir,"/UCI_HAR_Dataset","")
paste(this.dir,"/UCI_HAR_Dataset","")
gsub(paste(this.dir,"/UCI_HAR_Dataset","")," ","")
gsub(" ","",paste(this.dir,"/UCI_HAR_Dataset",""))
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
View(finalDF)
finalDF2 <- gather(measurements,averageValue,-(subjectID:activityNames))
finalDF2 <- gather(finalDF,measurements,averageValue,-(subjectID:activityNames))
View(finalDF2)
source('~/Documents/DOCS/DataScience/Getting_Cleaning_data/Project/Getting_Cleaning_Data_Project/run_analysis.R')
finalDF2<- selectedDF %>%
gather(measurements,value,-(subjectID:activityNames)) %>%
unite(subjectID_activityNames,subjectID,activityNames,sep="_")  %>%
dcast(subjectID_activityNames ~ measurements,mean) %>%
separate(subjectID_activityNames,into =c("subjectID","activityNames"),sep="_")
View(finalDF2)
names(finalDF2)
write.table(names(finalDF2),"tmp.txt")
write.table(names(finalDF2)[,2],"tmp.txt")
class(names(finalDF2)
)
length(names(finalDF2))
write.table(names(finalDF2),"tmp.txt",row.names = F)
